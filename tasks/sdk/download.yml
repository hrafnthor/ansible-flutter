- name: Flutter | SDK | Download version
  block:

  - name: Flutter | SDK | Set version installation path
    ansible.builtin.set_fact:
      flutter_version_path: "{{ flutter_sdk_path }}/{{ version }}"


  - name: Flutter | SDK | Lookup version installation path
    ansible.builtin.stat:
      path:  "{{ flutter_version_path }}"
    register: flutter_version_dir


  - name: Flutter | SDK | Ensure version installation directory
    ansible.builtin.file:
      path: "{{ flutter_version_path }}"
      state: directory
      modification_time: preserve
      access_time: preserve
      owner: "root"
      group: "root"
      mode: 0755
    when: not flutter_version_dir.stat.exists


  - name: Flutter | SDK | Set tmp archive name
    ansible.builtin.set_fact:
      flutter_archive_name: "flutter-{{ version }}.tar.gz"


  - name: Flutter | SDK | Download version archive
    ansible.builtin.get_url:
      url: "https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_{{ version }}-stable.tar.xz"
      dest: "/tmp/{{ flutter_archive_name }}"
    register: archive_download_state
    when: not flutter_version_dir.stat.exists


  - name: Flutter | SDK | Extract archive
    ansible.builtin.unarchive:
      remote_src: yes
      src: "/tmp/{{ flutter_archive_name }}"
      dest: "{{ flutter_version_path }}"
      owner: "root"
      group: "root"
      mode: 0755
      extra_opts: ['--strip-components=1', '--show-stored-names']
    register: unarchive_state
    when: not flutter_version_dir.stat.exists


  always:

    - name: Flutter | SDK | Cleanup downloaded archive
      ansible.builtin.file:
        path: "/tmp/{{ flutter_archive_name }}"
        state: absent
